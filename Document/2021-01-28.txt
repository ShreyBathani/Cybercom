==============PHP==============
=> time()
- time() function returns the current time in the number of seconds since the Unix Epoch (January 1 1970 00:00:00 GMT).

=> date()
- date() function formats a timestamp to a more readable date and time.
- Syntax: date(format,timestamp)
- 'format' Specifies the format of the timestamp
- 'timestamp' Specifies a timestamp. Default is the current date and time
    d - Represents the day of the month (01 to 31)
    m - Represents a month (01 to 12)
    Y - Represents a year (in four digits)
    l (lowercase 'L') - Represents the day of the week
    H - 24-hour format of an hour (00 to 23)
    h - 12-hour format of an hour with leading zeros (01 to 12)
    i - Minutes with leading zeros (00 to 59)
    s - Seconds with leading zeros (00 to 59)

=>rand()
- rand() function generates a random integer.
- Syntax: rand(min,max);
- 'min'	Specifies the lowest number to be returned
- 'max' Specifies the highest number to be returned

=>$_SERVER
- $_SERVER is a PHP super global variable which holds information about headers, paths, and script locations.
- $_SERVER['HTTP_HOST'] Returns the Host header from the current request
- $_SERVER['REMOTE_HOST'] Returns the Host name from where the user is viewing the current page
- $_SERVER['SERVER_ADDR'] Returns the IP address of the host server
- $_SERVER['REMOTE_ADDR'] Returns the IP address from where the user is viewing the current page
- $_SERVER['REQUEST_METHOD'] Returns the request method used to access the page (such as POST)

=>$_GET
- $_GET is a PHP super global variable which is used to collect form data after submitting an HTML form with method="get".
- The data sent to the server with POST is stored in the URL.
- GET is less secure compared to POST because data sent is part of the URL

=>$_POST
- PHP $_POST is a PHP super global variable which is used to collect form data after submitting an HTML form with method="post".
- The data sent to the server with POST is stored in the request body of the HTTP request.
- POST is a little safer than GET because the parameters are not stored in browser history or in web server logs